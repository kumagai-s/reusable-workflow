name: workflow with reusable action 
run-name: run ${{ inputs.target-env }} workflow with reusable action

on:
  workflow_dispatch:
    inputs:

      target-env:
        description: 'Target env'
        required: true
        type: choice
        options:
          - prod
          - stag
          - test

concurrency: ${{ inputs.target-env }}

jobs:

  define-secret-key:
    runs-on: ubuntu-latest
    outputs:
      secret-key: ${{ steps.step1.outputs.secret-key }}
    steps:
      - id: step1
        run: >
          echo "secret-key=${{ 
            (
              inputs.target-env == 'prod'
            ) 
            && 'SECRET_VALUE_PROD' || 
            (
              inputs.target-env == 'stag'
            ) 
            && 'SECRET_VALUE_STAG' || 'SECRET_VALUE_TEST'
          }}" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest

    steps:
      - name: echo secret key
        run: |
          echo "SECRET_KEY: ${{ needs.define-secret-key.outputs.secret-key }}"

  reuse-job1:
    needs: [test, define-secret-key]

    uses: ./.github/workflows/reusable-action.yml
    with:
      arg1: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job1.arg1 }}
      arg2: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job1.arg2 }}
      arg3: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job1.arg3 }}
    secrets:
      SECRET_VALUE: ${{ secrets[inputs.target-env] }}

  reuse-job2:
    needs: [test, define-secret-key]
    
    if: inputs.target-env == 'prod' || inputs.target-env == 'stag'

    uses: ./.github/workflows/reusable-action.yml
    with:
      arg1: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job2.arg1 }}
      arg2: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job2.arg2 }}
      arg3: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job2.arg3 }}
    secrets:
      SECRET_VALUE: ${{ secrets[needs.define-secret-key.outputs.secret-key] }}

  reuse-job3:
    needs: [test, define-secret-key]
    
    uses: ./.github/workflows/reusable-action.yml
    with:
      arg1: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job3.arg1 }}
      arg2: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job3.arg2 }}
      arg3: ${{ fromJSON(vars.CONSTANTS)[inputs.target-env].job3.arg3 }}
    secrets:
      SECRET_VALUE: ${{ secrets[needs.define-secret-key.outputs.secret-key] }}
          
